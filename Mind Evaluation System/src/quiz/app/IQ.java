package quiz.app;import javax.swing.*;import java.awt.*;import java.awt.event.*;public class IQ extends JFrame implements ActionListener {    String questions[][] = new String[10][5];    String answers[][] = new String[10][2];    String useranswers[][] = new String[10][1];    JLabel qno, question;    JRadioButton opt1, opt2, opt3, opt4;    ButtonGroup groupoptions;    JButton next, submit, lifeline;    public static int timer = 15;    public static int ans_given = 0;    public static int count = 0;    public static int score = 0;    String name;    IQ(String name) {        this.name = name;        setBounds(50, 0, 1440, 850);        getContentPane().setBackground(new Color(0x4F0D03));        setUndecorated(true);        setLayout(null);        ImageIcon i1 = new ImageIcon(ClassLoader.getSystemResource("icons/quiz.png"));        JLabel image = new JLabel(i1);        image.setBounds(0, 0, 1440, 392);        add(image);        // Set text color to 0xEFA43C        Color textColor = new Color(0xEFA43C);        qno = new JLabel();        qno.setBounds(100, 450, 50, 30);        qno.setFont(new Font("Tahoma", Font.PLAIN, 24));        qno.setForeground(textColor);  // Set text color        add(qno);        question = new JLabel();        question.setBounds(150, 450, 900, 30);        question.setFont(new Font("Tahoma", Font.PLAIN, 24));        question.setForeground(textColor);  // Set text color        add(question);        questions[0][0] = " Find the missing number in the series: 2, 6, 12, 20, ?";        questions[0][1] = "30";        questions[0][2] = "32";        questions[0][3] = "42";        questions[0][4] = "24";        questions[1][0] = "Which word is the odd one out?";        questions[1][1] = "Apple";        questions[1][2] = "Banana";        questions[1][3] = "Carrot";        questions[1][4] = "Mango";        questions[2][0] = "If CAT = 24, DOG = 26, then RAT = ?";        questions[2][1] = "22";        questions[2][2] = "20";        questions[2][3] = "23";        questions[2][4] = "21";        questions[3][0] = "Rearrange the letters to form a meaningful word: LEPA";        questions[3][1] = " Pale";        questions[3][2] = " Leap";        questions[3][3] = "Plea";        questions[3][4] = " All of these";        questions[4][0] = "Which is the smallest?";        questions[4][1] = "2/3";        questions[4][2] = "3/5";        questions[4][3] = " 4/7";        questions[4][4] = " 5/8";        questions[5][0] = "What comes next J,F,M,A,M,?";        questions[5][1] = "J";        questions[5][2] = "N";        questions[5][3] = "A";        questions[5][4] = "J";        questions[6][0] = "Which word does NOT belong to the group?";        questions[6][1] = "Chair";        questions[6][2] = "Table";        questions[6][3] = "Shelf";        questions[6][4] = "Pillow";        questions[7][0] = " If 1 = 3, 2 = 3, 3 = 5, and 4 = 4, what is 5 = ?";        questions[7][1] = "4";        questions[7][2] = "5";        questions[7][3] = "3";        questions[7][4] = "6";        questions[8][0] = " What is the next letter in the series? A, C, F, J, O, ?";        questions[8][1] = "S";        questions[8][2] = "T";        questions[8][3] = "U";        questions[8][4] = "V";        questions[9][0] = "Which number is the odd one out?";        questions[9][1] = "27";        questions[9][2] = "64";        questions[9][3] = "125";        questions[9][4] = "36";        answers[0][1] = "32";        answers[1][1] = "Carrot";        answers[2][1] = "22";        answers[3][1] = "All of these";        answers[4][1] = " 5/8";        answers[5][1] = "J";        answers[6][1] = "Pillow";        answers[7][1] = "4";        answers[8][1] = "T";        answers[9][1] = "36";        opt1 = new JRadioButton();        opt1.setBounds(170, 520, 700, 30);        opt1.setBackground(new Color(0x4F0D03));        opt1.setFont(new Font("Dialog", Font.PLAIN, 20));        opt1.setForeground(textColor);  // Set text color        add(opt1);        opt2 = new JRadioButton();        opt2.setBounds(170, 560, 700, 30);        opt2.setBackground(new Color(0x4F0D03));        opt2.setFont(new Font("Dialog", Font.PLAIN, 20));        opt2.setForeground(textColor);  // Set text color        add(opt2);        opt3 = new JRadioButton();        opt3.setBounds(170, 600, 700, 30);        opt3.setBackground(new Color(0x4F0D03));        opt3.setFont(new Font("Dialog", Font.PLAIN, 20));        opt3.setForeground(textColor);  // Set text color        add(opt3);        opt4 = new JRadioButton();        opt4.setBounds(170, 640, 700, 30);        opt4.setBackground(new Color(0x4F0D03));        opt4.setFont(new Font("Dialog", Font.PLAIN, 20));        opt4.setForeground(textColor);  // Set text color        add(opt4);        groupoptions = new ButtonGroup();        groupoptions.add(opt1);        groupoptions.add(opt2);        groupoptions.add(opt3);        groupoptions.add(opt4);        next = new JButton("Next");        next.setBounds(700, 750, 200, 30);        next.setFont(new Font("Tahoma", Font.PLAIN, 18));        next.setBackground(new Color(22, 99, 54));        next.setForeground(textColor);  // Set text color        next.addActionListener(this);        next.setFocusPainted(false);  // Remove focus border        next.setBorderPainted(false); // Remove button border        add(next);        lifeline = new JButton("Help");        lifeline.setBounds(930, 750, 200, 30);        lifeline.setFont(new Font("Tahoma", Font.PLAIN, 18));        lifeline.setBackground(new Color(22, 99, 54));        lifeline.setForeground(textColor);  // Set text color        lifeline.addActionListener(this);        lifeline.setFocusPainted(false);  // Remove focus border        lifeline.setBorderPainted(false); // Remove button border        add(lifeline);        submit = new JButton("Submit");        submit.setBounds(1150, 750, 200, 30);        submit.setForeground(Color.BLACK);        submit.setFont(new Font("Tahoma", Font.PLAIN, 18));        submit.setBackground(new Color(0xFFA500));        submit.setForeground(new Color(0x4F0D03));  // Set text color        submit.addActionListener(this);        submit.setEnabled(false);        submit.setFocusPainted(false);  // Remove focus border        submit.setBorderPainted(false); // Remove button border        add(submit);        start(count);        setUndecorated(false);        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);        setVisible(true);    }    public void actionPerformed(ActionEvent ae) {        if (ae.getSource() == next) {            repaint();            opt1.setEnabled(true);            opt2.setEnabled(true);            opt3.setEnabled(true);            opt4.setEnabled(true);            ans_given = 1;            if (groupoptions.getSelection() == null) {                useranswers[count][0] = "";            } else {                useranswers[count][0] = groupoptions.getSelection().getActionCommand();            }            if (count == 8) {                next.setEnabled(false);                submit.setEnabled(true);            }            count++;            start(count);        } else if (ae.getSource() == lifeline) {            if (count == 2 || count == 4 || count == 6 || count == 8 || count == 9) {                opt2.setEnabled(false);                opt3.setEnabled(false);            } else {                opt1.setEnabled(false);                opt4.setEnabled(false);            }            lifeline.setEnabled(false);        } else if (ae.getSource() == submit) {            ans_given = 1;            if (groupoptions.getSelection() == null) {                useranswers[count][0] = "";            } else {                useranswers[count][0] = groupoptions.getSelection().getActionCommand();            }            for (int i = 0; i < useranswers.length; i++) {                if (useranswers[i][0].equals(answers[i][1])) {                    score += 10;                } else {                    score += 0;                }            }            setVisible(false);            new Score(name, score, "IQ");        }    }    public void paint(Graphics g) {        super.paint(g);        String time = "Time left - " + timer + " seconds"; // 15        g.setColor(Color.RED);        g.setFont(new Font("Tahoma", Font.BOLD, 25));        if (timer > 0) {            g.drawString(time, 1100, 500);        } else {            g.drawString("Times up!!", 1100, 500);        }        timer--; // 14        try {            Thread.sleep(1000);            repaint();        } catch (Exception e) {            e.printStackTrace();        }        if (ans_given == 1) {            ans_given = 0;            timer = 15;        } else if (timer < 0) {            timer = 15;            opt1.setEnabled(true);            opt2.setEnabled(true);            opt3.setEnabled(true);            opt4.setEnabled(true);            if (count == 8) {                next.setEnabled(false);                submit.setEnabled(true);            }            if (count == 9) { // submit button                if (groupoptions.getSelection() == null) {                    useranswers[count][0] = "";                } else {                    useranswers[count][0] = groupoptions.getSelection().getActionCommand();                }                for (int i = 0; i < useranswers.length; i++) {                    if (useranswers[i][0].equals(answers[i][1])) {                        score += 10;                    } else {                        score += 0;                    }                }                setVisible(false);                new Score(name, score, "IQ");            } else { // next button                if (groupoptions.getSelection() == null) {                    useranswers[count][0] = "";                } else {                    useranswers[count][0] = groupoptions.getSelection().getActionCommand();                }                count++; // 0 // 1                start(count);            }        }    }    public void start(int count) {        qno.setText("" + (count + 1) + ". ");        question.setText(questions[count][0]);        opt1.setText(questions[count][1]);        opt1.setActionCommand(questions[count][1]);        opt2.setText(questions[count][2]);        opt2.setActionCommand(questions[count][2]);        opt3.setText(questions[count][3]);        opt3.setActionCommand(questions[count][3]);        opt4.setText(questions[count][4]);        opt4.setActionCommand(questions[count][4]);        groupoptions.clearSelection();    }    public static void main(String[] args) {        new IQ("User");    }}